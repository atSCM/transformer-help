version: 2.1

orbs:
  atscm:
    executors:
      node:
        docker:
          - image: circleci/node:12
      browsers:
        docker:
          - image: circleci/node:12-browsers
    commands:
      attach:
        steps:
          - checkout:
              path: /home/circleci/project
          - attach_workspace:
              at: /home/circleci/project
      git-login:
        steps:
          - run:
              name: Setting up git user
              command: git config --global user.email ci@ls-age.com && git config --global user.name "ls-age CI"

jobs:
  install:
    executor: atscm/node
    steps:
      - checkout
      - restore_cache:
          keys:
            - v2-npm-deps-{{ checksum "package-lock.json" }}
            - v2-npm-deps
      - run:
          name: Installing npm dependencies
          command: npm ci
      - save_cache:
          key: v2-npm-deps-{{ checksum "package-lock.json" }}
          paths:
            - ~/.npm
            - ~/.cache
      - persist_to_workspace:
          root: .
          paths:
            - .

  build:
    executor: atscm/node
    steps:
      - atscm/attach
      - run:
          name: Create bundle
          command: npm run build
      - persist_to_workspace:
          root: .
          paths:
            - out

  lint:
    executor: atscm/node
    steps:
      - atscm/attach
      - run:
          name: Check formatting
          command: npm run format -- --check
      - store_test_results:
          path: ~/reports
      - store_artifacts:
          path: ~/reports

  deploy:
    executor: atscm/node
    steps:
      - atscm/attach
      - add_ssh_keys
      - run:
          name: Setting up git user
          command: git config --global user.email ci@ls-age.com && git config --global user.name "ls-age [bot]"
      - run:
          name: Signing into npm
          command: echo "$NPM_TOKEN" > ~/.npmrc
      - run:
          name: Deploying changes
          command: npx bump-version release --gh-token $RELEASE_GITHUB_TOKEN

workflows:
  version: 2

  default:
    jobs:
      - install
      - build:
          requires:
            - install
      - lint:
          requires:
            - install
      - deploy:
          requires:
            - build
            - lint
          filters:
            branches:
              only:
                - master
                - beta
